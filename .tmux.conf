# Change prefix
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# Fix some key passthrough issues
set -wg xterm-keys on
set -sg extended-keys always
set -as terminal-features 'xterm*:extkeys'
set -g allow-passthrough on
set -g focus-events on

# Hotkeys
bind -n M-f new-window ~/.local/scripts/tmux-sessionizer
bind -n C-g new-window ~/.local/scripts/tmux-lazygit
bind -n M-c new-window
bind -n M-x confirm-before -p "kill-pane #P? (y/n)" kill-pane

# Splits
# bind -n M-5 split-window -h
bind -n "M-'" split-window

# Tab keys - index at 1
set -g base-index 1
setw -g pane-base-index 1
set-option -g renumber-windows on
bind -n M-1 select-window -t 1
bind -n M-2 select-window -t 2
bind -n M-3 select-window -t 3
bind -n M-4 select-window -t 4
# bind -n M-5 select-window -t 5 # Conflicts with vertical split
bind -n M-6 select-window -t 6
bind -n M-7 select-window -t 7
bind -n M-8 select-window -t 8
bind -n M-9 select-window -t 9
bind -n M-0 select-window -t 0

# Go to last window
bind -n M-o last-window
# Show session list
bind -n M-s choose-session -s
# Focus current pane - overrides zsh kill but we're in tmux so we can just kill pane
bind -n C-z resize-pane -Z
# Allow nvim zen mode to remove status line
set-option -g allow-passthrough on

# Fix tmux colors in alacritty
set -sg terminal-overrides ",*:RGB"
# Undercurl
set -g default-terminal "${TERM}"
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colours - needs tmux-3.0et-option -g allow-passthrough on

# List of plugins
set -g @plugin 'catppuccin/tmux#v2.1.1'
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-battery'
# set -g @plugin 'Nybkox/tmux-kanagawa'


# Theme customization
# Kanagawa
set -g @kanagawa-show-left-icon 
set -g @kanagawa-show-powerline true
set -g @kanagawa-show-left-sep 
set -g @kanagawa-show-right-sep 

set -g @kanagawa-plugins "battery time"
set -g @kanagawa-battery-colors "light_purple white"
set -g @kanagawa-battery-charging-label "󱐋"

set -g @kanagawa-time-format "%a %b %-d %-I:%M %p"
set -g @kanagawa-refresh-rate 5

set -g @kanagawa-show-flags true

# Catpuccin
set -g @catppuccin_flavor "macchiato"
# Status
set -g status-position top
set -g status-right-length 100
set -g status-left-length 100
set -g status-left "#{E:@catppuccin_status_session}"
set -g status-right ""

set -og @catppuccin_status_left_separator ""
set -og @catppuccin_status_middle_separator ""
set -og @catppuccin_status_right_separator " "
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

set -g @catppuccin_status_background "default"

# Windows
set -g @catppuccin_window_status_style "rounded"
# Window icons
set -ogq @catppuccin_window_flags "icon"
set -ogq @catppuccin_window_flags_icon_last ""
set -ogq @catppuccin_window_flags_icon_current ""
set -ogq @catppuccin_window_flags_icon_zoom " 󰁌"
set -ogq @catppuccin_window_flags_icon_mark " 󰃀"
set -ogq @catppuccin_window_flags_icon_silent " 󰂛"
set -ogq @catppuccin_window_flags_icon_activity " 󱅫"
set -ogq @catppuccin_window_flags_icon_bell " 󰂞"
# Use process name for window text
set -g @catppuccin_window_default_text " #{b:pane_current_command}"
set -g @catppuccin_window_current_text " #{b:pane_current_command}"
set -g @catppuccin_window_text " #{b:pane_current_command}"

set -g @catppuccin_date_time_text " %a %b %-d %-I:%M %p"
set -g @catppuccin_window_number_position "left"
set -g @catppuccin_window_default_fill "all"
set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_directory_text "#{pane_current_path}"
# Enable mouse
set -g mouse on

# Fix iTerm title
set-option -g set-titles on
set-option -g set-titles-string '#T'

# Use vim keybindings when scrolling and swapping panes
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smartsplits
# '@pane-is-vim' is a pane-local option that is set by the plugin on load,
# and unset when Neovim exits or suspends; note that this means you'll probably
# not want to lazy-load smart-splits.nvim, as the variable won't be set until
# the plugin is loaded

# Smart pane switching with awareness of Neovim splits.
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l'  'select-pane -R'

# Alternatively, if you want to disable wrapping when moving in non-neovim panes, use these bindings
# bind-key -n C-h if -F '#{@pane-is-vim}' { send-keys C-h } { if -F '#{pane_at_left}'   '' 'select-pane -L' }
# bind-key -n C-j if -F '#{@pane-is-vim}' { send-keys C-j } { if -F '#{pane_at_bottom}' '' 'select-pane -D' }
# bind-key -n C-k if -F '#{@pane-is-vim}' { send-keys C-k } { if -F '#{pane_at_top}'    '' 'select-pane -U' }
# bind-key -n C-l if -F '#{@pane-is-vim}' { send-keys C-l } { if -F '#{pane_at_right}'  '' 'select-pane -R' }

# Smart pane resizing with awareness of Neovim splits.
bind-key -n M-h if -F "#{@pane-is-vim}" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if -F "#{@pane-is-vim}" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if -F "#{@pane-is-vim}" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if -F "#{@pane-is-vim}" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if -F \"#{@pane-is-vim}\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l


# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
